<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2012 Matt Bertolini

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project name="JxrTaskTest" xmlns:au="antlib:org.apache.ant.antunit" xmlns:jxr="antlib:com.mattbertolini.jxr.ant">
    <target name="setUp">
        <tempfile property="temp.dir" prefix="JxrTaskTest" destdir="${java.io.tmpdir}"/>
        <mkdir dir="${temp.dir}"/>
    </target>

    <target name="tearDown">
        <delete dir="${temp.dir}" quiet="false" failonerror="true"/>
    </target>

    <target name="testSuccessfulBuild">
        <jxr:jxr destdir="${temp.dir}" sourcepath="."/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testMissingDestDir">
        <au:expectfailure>
            <jxr:jxr sourcepath="."/>
        </au:expectfailure>
    </target>

    <target name="testDestDirNotDirectory">
        <au:expectfailure>
            <jxr:jxr sourcepath="." destdir="null"/>
        </au:expectfailure>
    </target>

    <target name="testMissingSourcePath">
        <au:expectfailure>
            <jxr:jxr destdir="${temp.dir}"/>
        </au:expectfailure>
    </target>

    <target name="testExcludes">
        <jxr:jxr destdir="${temp.dir}" sourcepath=".">
            <patternset>
                <exclude name="testdata/ClassToExclude.java"/>
            </patternset>
        </jxr:jxr>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
        <au:assertFileDoesntExist file="${temp.dir}/testdata/ClassToExclude.html"/>
    </target>

    <target name="testSetInputEncoding">
        <jxr:jxr destdir="${temp.dir}" sourcepath="." inputencoding="UTF-16"/>
        <au:assertLogContains text="Setting input encoding to UTF-16" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetOutputEncoding">
        <jxr:jxr destdir="${temp.dir}" sourcepath="." outputencoding="UTF-16"/>
        <au:assertLogContains text="Setting output encoding to UTF-16" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetWindowTitleByAttribute">
        <jxr:jxr destdir="${temp.dir}" sourcepath="." windowtitle="Test window title"/>
        <au:assertLogContains text="Setting window title to: Test window title" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetWindowTitleByElement">
        <jxr:jxr destdir="${temp.dir}" sourcepath=".">
            <jxr:windowtitle>Test window title</jxr:windowtitle>
        </jxr:jxr>
        <au:assertLogContains text="Setting window title" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetDocTitleByAttribute">
        <jxr:jxr destdir="${temp.dir}" sourcepath="." doctitle="Test doc title"/>
        <au:assertLogContains text="Setting doc title to: Test doc title" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetDocTitleByElement">
        <jxr:jxr destdir="${temp.dir}" sourcepath=".">
            <jxr:doctitle>Test doc title</jxr:doctitle>
        </jxr:jxr>
        <au:assertLogContains text="Setting doc title" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetBottomByAttribute">
        <jxr:jxr destdir="${temp.dir}" sourcepath="." bottom="Copyright Notice"/>
        <au:assertLogContains text="Setting bottom text" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetBottomByElement">
        <jxr:jxr destdir="${temp.dir}" sourcepath=".">
            <jxr:bottom>Copyright Notice</jxr:bottom>
        </jxr:jxr>
        <au:assertLogContains text="Setting bottom text" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>

    <target name="testSetStylesheet">
        <jxr:jxr destdir="${temp.dir}" sourcepath="." stylesheet="${basedir}/example-stylesheet.css"/>
        <au:assertLogContains text="Setting custom stylesheet ${basedir}/example-stylesheet.css" level="debug"/>
        <au:assertFileExists file="${temp.dir}/index.html"/>
        <au:assertFileExists file="${temp.dir}/stylesheet.css"/>
        <au:assertFileExists file="${temp.dir}/testdata/ExampleClass.html"/>
    </target>
</project>
